<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     29/03/2009 14:11:16                                                        

     SpeakIt    
     
                   
     Osiris ArgÃ¼ello                                                                
     ====================================================================== -->
<project name="SpeakIt" default="run" basedir=".">
	<description>
            description
    </description>
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist"  location="dist"/>
	<property name="tests"  location="src/speakit/test"/>
	<property name="wordReaderTests"  location="src/speakit/wordreader/test"/>
	<property name="dictionaryTests"  location="src/speakit/dictionary/test"/>
	<property name="build.Test" value="test-classes"/>
	<property name="main-class"  value="speakit/Main"/>
	<property name="lib.dir"     value="lib"/>
	<property name="junit.dir" value="${lib.dir}/junit.jar" /> 	
	
	
	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar"/>
	</path>
	

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init" description="compile the source" >
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" encoding="8859_1" classpathref="classpath"/>
	</target>

	<target name="jar" depends="compile">
		<!-- Create the distribution directory and build the jar file -->
		<mkdir dir="${dist}/lib"/>
		<jar destfile="${dist}/lib/${ant.project.name}-${DSTAMP}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
				<attribute name="junit.dir" value="${lib.dir}/junit.jar" /> 	
			</manifest>
		</jar>
	</target>


	<target name="run" depends="jar">
		<!-- Compile and starts the SpeakIt application -->
		<java jar="${dist}/lib/${ant.project.name}-${DSTAMP}.jar" fork="true"/>
	</target>

	<target name="junit-compile" depends="jar">
		<!-- Compile all junitTests -->
	     <mkdir dir="${build.Test}"/>
		 <javac destdir="${build.Test}"
		             target="1.6" source="1.6" srcdir="${dictionaryTests}">
		            <classpath>
		                <path refid="classpath"/>
		                <pathelement path="${build}"/>
		            </classpath>
		 </javac>                                             
		 <copy todir="${build.Test}">
		       <fileset dir="${dictionaryTests}">
		                <include name="**/*.*"/>
		                <exclude name="**/*.java"/>
		        </fileset>
		 </copy>
		 <javac destdir="${build.Test}"
				    target="1.6" source="1.6" srcdir="${wordReaderTests}">
				    <classpath>
				            <path refid="classpath"/>
				            <pathelement path="${build}"/>
				    </classpath>
	     </javac>                                             
	     <copy todir="${build.Test}">
				<fileset dir="${wordReaderTests}">
				                <include name="**/*.*"/>
				                <exclude name="**/*.java"/>
				</fileset>
         </copy>
	     <javac destdir="${build.Test}"
				 target="1.6" source="1.6" srcdir="${tests}">
				 <classpath>
				     <path refid="classpath"/>
				     <pathelement path="${build}"/>
				 </classpath>
	     </javac>                                             
         <copy todir="${build.Test}">
				 <fileset dir="${tests}">
				                <include name="**/*.*"/>
				                <exclude name="**/*.java"/>
				 </fileset>
	     </copy>	
		
    </target>
	
	<target name="junit" depends="junit-compile">
		<!-- Starts junitTests -->
		<junit printsummary="yes" fork="yes" haltonfailure="yes">
				<formatter type="brief"/>
				<classpath>                                       
		                <path refid="classpath"/>               
					    <pathelement path="${build}"/>  
		                <pathelement path="${build.Test}"/>   
					</classpath>   
				<test name="junitTest.AllTests"/>
		</junit>
	</target>
		

	<target name="clean" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
		<delete dir="bin"/>
		<delete dir="${build.Test}"/>
	</target>


</project>
